#!/usr/bin/env tclsh

#  @package   fizzbuzz
#  @file      fizzbuzz.test
#  @brief     Tcl/Tk application "FizzBuzz"
#  @author    Rolf Hemmerling <hemmerling@gmx.net>
#  @version   1.00
#  @date      2015-07-01
#  @copyright Apache License, Version 2.0
#
#  fizzbuzz - Tcl/Tk application "FizzBuzz"
#
#  Copyright 2015 Rolf Hemmerling
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

package require tcltest
namespace import tcltest::*
source fizzbuzz.tcl

tcltest::verbose pfs
     
tcltest::test FizzBuzz1 {fizzbuzz(1) returns "1"} -body {
fizzbuzz 1
} -result {1}

tcltest::test FizzBuzz3 {fizzbuzz(3) returns "Fizz"} -body {
fizzbuzz 3
} -result {Fizz}
 
tcltest::test FizzBuzz5 {fizzbuzz(5) returns "Buzz"} -body {
fizzbuzz 5
} -result {Buzz}

tcltest::test FizzBuzz6 {fizzbuzz(6) returns "Fizz"} -body {
fizzbuzz 6
} -result {Fizz}

tcltest::test FizzBuzz10 {fizzbuzz(10) returns "Buzz"} -body {
fizzbuzz 5
} -result {Buzz}

tcltest::test FizzBuzz15 {fizzbuzz(15) returns "FizzBuzz"} -body {
fizzbuzz 15
} -result {FizzBuzz}

set anOutputList { \
"1" "2" "Fizz" "4" "Buzz" "Fizz" "7" "8" "Fizz" "Buzz" \
"11" "Fizz" "13" "14" "FizzBuzz" "16" "17" "Fizz" "19" "Buzz" \
"Fizz" "22" "23" "Fizz" "Buzz" "26" "Fizz" "28" "29" "FizzBuzz" \
"31" "32" "Fizz" "34" "Buzz" "Fizz" "37" "38" "Fizz" "Buzz" \
"41" "Fizz" "43" "44" "FizzBuzz" "46" "47" "Fizz" "49" "Buzz" \
"Fizz" "52" "53" "Fizz" "Buzz" "56" "Fizz" "58" "59" "FizzBuzz" \
"61" "62" "Fizz" "64" "Buzz" "Fizz" "67" "68" "Fizz" "Buzz" \
"71" "Fizz" "73" "74" "FizzBuzz" "76" "77" "Fizz" "79" "Buzz" \
"Fizz" "82" "83" "Fizz" "Buzz" "86" "Fizz" "88" "89" "FizzBuzz" \
"91" "92" "Fizz" "94" "Buzz" "Fizz" "97" "98" "Fizz" "Buzz" }

proc strip {anInputList} {
    foreach jj [lrange $anInputList 0 end] {
		lappend resultList $jj
    }
    return $resultList
}

tcltest::test FizzBuzz100 {fizzbuzz(1..100) should return the right value each time"} -body {
    proc arrayCheck4 {} {
	    # generate a list 0..99, to use 1..100
        set anInputList [struct::list iota 100]
        foreach ii [lrange $anInputList 0 end] {
	        #puts [expr $ii+1]
	        lappend resultList [fizzbuzz [incr ii]]
    	}
    	return $resultList
    }
   
    arrayCheck4
} -result [strip $anOutputList]


tcltest::test FizzBuzzWithoutParameters {fizzbuzz requires a numeric parameter, e.g. "fizzbuzz 1"} -body {
fizzbuzz
} -returnCodes 1 -result {wrong # args: should be "fizzbuzz anInputValue"}
     
tcltest::cleanupTests
   