#This file was originally generated by PyScripter's unitest wizard

import unittest
from gol03 import Gol03

def dummy():
    """ Dummy function for comparison of the return values """
    return

class Gol03Test(unittest.TestCase):


    def setUp(self):
        pass

    def tearDown(self):
        pass

    def check_griddata(griddata,new_griddata):

        result = False

        count = 0

        for cell in griddata:
            if cell == True:
                count += 1

        if count == 3 | count == 4:
            result = True

        return result

    def check_newgriddata(new_griddata):

        result = new_griddata[4] == 1

        return result



    def testIsCellAliveWithTwoNeighbours(self):
        self.gol = Gol03()

        result = False

        griddata = [False, False, False, True, True, True, False, False, False]
        self.gol.set_griddata(griddata)
        self.gol.next()
        new_griddata = self.gol.get_griddata()

        if check_griddata(griddata):
            result = check_newgriddata(new_griddata)

        assert result == True, 'Gol01.get_size() does not provide the right return value'
        pass


# run all tests
if __name__ == "__main__":
    try:
        unittest.main()
    except SystemExit as inst:
        if inst.args[0] is True: # raised by sys.exit(True) when tests failed
            raise

