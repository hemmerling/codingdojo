#This file was originally generated by PyScripter's unitest wizard

import unittest
from gol01 import Gol01

def dummy():
    """ Dummy function for comparison of the return values """
    return

class Gol01Test(unittest.TestCase):

    def setUp(self):
        self.gol = Gol01()
        self.gol.field = [[False, False, False], \
                          [False, True, False], \
                          [True, True, True]]
        pass

    def tearDown(self):
        pass

    def testNeighbours11(self):
        assert self.gol.getNeighbours(1,1) == 3, '(1,1) hat 3 lebendige Nachbarn'
        pass

    def testAliveIf3Neigbhours(self):
        self.gol = Gol01()
        numberOfNeigbours = self.gol.getNeighbours(1,1)
        assert self.gol.isNextAlive(numberOfNeigbours), '(1,1) lebt in naechster Runde'
        pass

    def testNeighbours00(self):
        assert self.gol.getNeighbours(0,0) == 1, '(0,0) hat 1 lebendige Nachbarn'
        pass


# run all tests
if __name__ == "__main__":
    try:
        unittest.main()
    except SystemExit as inst:
        if inst.args[0] is True: # raised by sys.exit(True) when tests failed
            raise

